# Сумма элементов, используя рекурсию. [O(n)]

# Создаем функцию "sum_of_elem", которая принимает один входной параметр:
# список "list_of_elem", содержащий элементы для суммирования.

def sum_of_elem(list_of_elem):
    # Создаем базовый случай.
    # Базовый случай в рекурсивной функции - это часть функции, в которой описывается
    # условие прекращения работы функции в целях предотвращения зацикливания.
    # Если одна из вызванных рекурсивно копий функции "sum_of_elem" принимает в качестве параметра список,
    # содержащий 0 элементов, то мы выходим из этой копии функции "sum_of_elem" и возвращаем число "0"
    # предыдущей копии функции "sum_of_elem" в стеке вызовов, поскольку сумма 0 элементов всегда равна 0.
    # Если изначально вызывается функция "sum_of_elem", которая принимает в качестве параметра список,
    # содержащий 0 элементов, то функция "sum_of_elem" сразу возвращает число "0", поскольку сумма 0 элементов
    # всегда равна 0.
    # Функция "len()" возвращает количество элементов в списке.
    # Ключевое слово "return" выходит из функции и возвращает какое-либо значение.
    if len(list_of_elem) == 0:
        return 0
    # Создаем рекурсивный случай.
    # Рекурсивный случай в рекурсивной функции - это часть функции, в которой функция вызывает сама себя
    # в целях выполнения какой-либо задачи.
    # Рекурсивно вызываем копию функции "sum_of_elem" со списком "list_of_elem" в качестве входного параметра,
    # за исключением первого элемента в этом списке, при этом результат работы этой рекурсивно вызванной копии
    # функции "sum_of_elem" суммируется с первым элементом входного параметра текущей копии функции "list_of_elem".
    # Когда рекурсивно вызывается копия функции "sum_of_elem", которая принимает в качестве параметра список,
    # содержащий 0 элементов, то срабатывает базовый случай.
    # Копии функции "sum_of_elem" в стеке вызовов поочередно завершают свою работу
    # и возвращают свои рассчитанные значения предыдущим рекурсивно вызванным копиям функции "sum_of_elem" до тех пор,
    # пока не завершит работу самая первая вызванная функция "sum_of_elem".
    else:
        return list_of_elem[0] + sum_of_elem(list_of_elem[1:])


# Попытаемся найти сумму 13, 7, 37, 7, 5.
# Функция "print()" выводит некую указанную информацию на экран или на какое-либо другое устройство вывода.
print(sum_of_elem([13, 7, 37, 7, 5]))
